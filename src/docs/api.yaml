swagger: '2.0'
info:
  description: REST API for SmartCar
  version: 1.0.0
  title: SmartCar
  contact:
    email: makhlouf.raouf@gmail.com

tags:
- name: drivers
  description: Operation availables on drivers
- name: vehicles
  description: Operation availables on vehicles
- name: vehiclesModels
  description: Operation availables on vehicles-models
- name: trips
  description: Operation availables on trips
- name: process
  description: Operation availables for process


paths:
  /trips:
    get:
      tags:
      - trips
      summary: returns all trips
      description: Returns all trips
      produces:
      - application/json
      operationId: getAllTrips
      responses:
        200:
          description: Successfull operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Trip'
        400:
          description: Malformed status
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: Trip not found
    post:
      tags:
      - trips
      summary: add new employer
      description: Add a new employer
      operationId: addTrip
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: trip
        description: the new employer to add
        schema:
          $ref: '#/definitions/Trip'
      responses:
        200:
          description: Succesful operation
          schema:
            $ref: '#/definitions/Trip'
        400:
          description: Malformed driver create request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No trip found with this Id
  /trips/{tripId}:
    get:
      tags:
      - trips
      summary: returns all vehicle for the specific client
      description: Returns all vehicle for the specific client
      produces:
      - application/json
      operationId: getTripById
      parameters:
      - in: path
        name: tripId
        required: true
        type: integer
        format: int64
        description: the trip ID
      responses:
        200:
          description: Successfull operation
          schema:
            $ref: '#/definitions/Trip'
        400:
          description: Malformed offices request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No vehicle found with this client
    patch:
      tags:
      - trips
      summary: updates personal informations of the trip
      operationId: updateTrip
      description: Updates informations about the given trip
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: tripId
        required: true
        type: integer
        format: int64
        description: the trip ID
      - in: body
        name: trip
        description: the pratitionner to update
        schema:
           $ref: '#/definitions/VehicleCU'
      responses:
        200:
          description: Succesful operation
          schema:
             $ref: '#/definitions/Trip'
        400:
          description: Malformed trip update request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No trip found with this Id
    delete:
      tags:
      - trips
      summary: deletes a trip
      description: Deletes the given trip. Be careful, all dependencies will be removed.
      operationId: deleteTrip
      produces:
      - application/json
      parameters:
      - in: path
        name: tripId
        required: true
        type: integer
        format: int64
        description: the trip ID
      responses:
        204:
          description: Succesful operation
        400:
          description: Malformed trip delete request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No trip found with this Id
  /drivers:
    get:
      tags:
      - drivers
      summary: returns all drivers
      description: Returns all drivers
      produces:
      - application/json
      operationId: getAllDrivers
      responses:
        200:
          description: Successfull operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Driver'
        400:
          description: Malformed status
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: Driver not found
    post:
      tags:
      - drivers
      summary: add new driver
      description: Add a new driver
      operationId: addDriver
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: driver
        description: the new driver to add
        schema:
           $ref: '#/definitions/DriverCU'
      responses:
        200:
          description: Succesful operation
          schema:
             $ref: '#/definitions/Driver'
        400:
          description: Malformed driver create request
          schema:
            $ref: '#/definitions/Error400'
  /drivers/{driverId}:
    get:
      tags:
      - drivers
      summary: returns information for the specific driver
      description: Returns information for the specific driver
      produces:
      - application/json
      operationId: getDriver
      parameters:
      - in: path
        name: driverId
        required: true
        type: integer
        format: int64
        description: the driver ID
      responses:
        200:
          description: Successfull operation
          schema:
              $ref: '#/definitions/Driver'
        400:
          description: Malformed offices request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No driver found with this driverId
    patch:
      tags:
      - drivers
      summary: updates personal informations of the driver
      operationId: updateDriver
      description: Updates personal informations about the given driver
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: driverId
        required: true
        type: integer
        format: int64
        description: the driver ID
      - in: body
        name: driver
        description: the driver to update
        schema:
           $ref: '#/definitions/DriverCU'
      responses:
        200:
          description: Succesful operation
          schema:
             $ref: '#/definitions/Driver'
        400:
          description: Malformed driver update request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No driver found with this Id
    delete:
      tags:
      - drivers
      summary: deletes a driver
      description: Deletes the given driver. Be careful, all dependencies will be removed.
      operationId: deleteDriver
      produces:
      - application/json
      parameters:
      - in: path
        name: driverId
        required: true
        type: integer
        format: int64
        description: the driver ID
      responses:
        204:
          description: Succesful operation
        400:
          description: Malformed driver delete request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No driver found with this Id
  /vehicles:
    get:
      tags:
      - vehicles
      summary: returns all vehicle
      description: Returns all vehicle
      produces:
      - application/json
      operationId: getAllVehicle
      responses:
        200:
          description: Successfull operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Vehicle'
        400:
          description: Malformed status
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: Vehicle not found
    post:
      tags:
      - vehicles
      summary: create a new vehicle
      description: Creates a new vehicle
      operationId: createVehicle
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Vehicle
        description: the vehicle to create
        schema:
           $ref: '#/definitions/VehicleCU'
      responses:
        200:
          description: Succesful operation
          schema:
             $ref: '#/definitions/Vehicle'
        400:
          description: Malformed vehicle creation request
          schema:
            $ref: '#/definitions/Error400'
  /vehicles/{vehicleId}:
    get:
      tags:
      - vehicles
      summary: returns a vehicle data
      description: Returns a vehicle data
      operationId: getVehicle
      produces:
      - application/json
      parameters:
      - in: path
        name: vehicleId
        description: the member Id
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successfull operation
          schema:
             $ref: '#/definitions/Vehicle'
        400:
          description: Malformed vehicle ID
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: Vehicle not found
    patch:
      tags:
      - vehicles
      summary: updates vehicle data
      operationId: updateVehicleInformation
      description: Updates vehicle data
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: vehicleId
        description: the member Id
        required: true
        type: integer
        format: int64
      - in: body
        name: Vehicle
        description: the pratitionner to update
        schema:
           $ref: '#/definitions/VehicleCU'
      responses:
        200:
          description: Succesful operation
          schema:
             $ref: '#/definitions/Vehicle'
        400:
          description: Malformed vehicle update request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No vehicle found with this Id
    delete:
      tags:
      - vehicles
      summary: deletes a vehicle
      description: Deletes the given vehicle. Be careful, all dependencies will be removed.
      operationId: deleteVehicle
      produces:
      - application/json
      parameters:
      - in: path
        name: vehicleId
        description: the vehicle Id
        required: true
        type: integer
        format: int64
      responses:
        204:
          description: Succesful operation
        400:
          description: Malformed vehicle delete request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No vehicle found with this Id
  /affect/{driverId}/drive/{vehicleId}/for/{tripId}:
    post:
      tags:
      - process
      summary: Affect driver and vehicle for each trip
      operationId: affectDriverVehicleToTrip
      description: Affect driver and vehicle for each trip
      produces:
      - application/json
      parameters:
      - in: path
        name: driverId
        required: true
        type: integer
        format: int64
        description: the driver ID
      - in: path
        name: vehicleId
        required: true
        type: integer
        format: int64
        description: the vehicle ID
      - in: path
        name: tripId
        required: true
        type: integer
        format: int64
        description: the trip ID
      responses:
        200:
          description: Succesful operation
        400:
          description: Malformed trip delete request
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: No driver found with this Id
  /vehiclesModels:
    get:
      tags:
      - vehiclesModels
      summary: returns all vehicle model
      description: Returns all vehicle model
      produces:
      - application/json
      operationId: getAllVehicleModel
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/VehicleModel'
        400:
          description: Malformed status
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: Vehicle Model not found
    post:
      tags:
      - vehiclesModels
      summary: create a new vehicle model
      description: Creates a new vehicle model
      operationId: createVehicleModel
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Vehicle
        description: the vehicle model to create
        schema:
           $ref: '#/definitions/VehicleModelCU'
      responses:
        200:
          description: Succesful operation
          schema:
             $ref: '#/definitions/VehicleModel'
        400:
          description: Malformed vehicle model creation request
          schema:
            $ref: '#/definitions/Error400'
  /vehiclesModels/{vehicleModelId}:
    get:
        tags:
        - vehiclesModels
        summary: returns a vehicle model data
        description: Returns a vehicle model data
        operationId: getVehicleModel
        produces:
        - application/json
        parameters:
        - in: path
          name: vehicleModelId
          description: the member Id
          required: true
          type: integer
          format: int64
        responses:
          200:
            description: Successful operation
            schema:
               $ref: '#/definitions/VehicleModel'
          400:
            description: Malformed vehicle ID
            schema:
              $ref: '#/definitions/Error400'
          404:
            description: Vehicle not found
    patch:
        tags:
        - vehiclesModels
        summary: updates vehicle model data
        operationId: updateVehicleModel
        description: Updates vehicle model data
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: path
          name: vehicleModelId
          description: the member Id
          required: true
          type: integer
          format: int64
        - in: body
          name: VehicleModelCU
          description: the vehicle model to update
          schema:
             $ref: '#/definitions/VehicleModelCU'
        responses:
          200:
            description: Successful operation
            schema:
               $ref: '#/definitions/VehicleModel'
          400:
            description: Malformed vehicle update request
            schema:
              $ref: '#/definitions/Error400'
          404:
            description: No vehicle model found with this Id
    delete:
        tags:
        - vehiclesModels
        summary: deletes a vehicle model
        description: Deletes the given vehicle. Be careful, all dependencies will be removed.
        operationId: deleteVehicleModel
        produces:
        - application/json
        parameters:
        - in: path
          name: vehicleModelId
          description: the vehicle model Id
          required: true
          type: integer
          format: int64
        responses:
          204:
            description: Successful operation
          400:
            description: Malformed vehicle model delete request
            schema:
              $ref: '#/definitions/Error400'
          404:
            description: No vehicle found with this Id

definitions:
  Error400:
    type: object
    properties:
      title:
        type: string
      message:
        type: string
  Address:
    type: object
    properties:
      streetAddress:
        type: string
        example: 25 Main Street
      postalCode:
        type: string
        example: "59000"
      city:
        type: string
        example: Lille
    required:
    - streetAddress
    - postalCode
    - city

  Tank:
    type: object
    properties:
      totalCapacity:
        type: string
      currentQuantity:
        type: string

  Tire:
    type: object
    properties:
      pressure:
        type: number
      traveledKm:
        type: integer
      probaOfLeak:
        type: number
  DriverCU:
    type: object
    properties:
      firstname:
        type: string
        example: John
      lastname:
        type: string
        example: Doe
      mail:
        type: string
        example: 'john.doe@gmail.com'
      phone:
        type: integer
        format: int32
        example: 0628001234
      address:
        $ref: '#/definitions/Address'
    required:
    - firstname
    - lastname
    - mail
    - phone
  Driver:
    type: object
    allOf:
    - properties:
        id:
          type: integer
          format: int64
    - $ref: '#/definitions/DriverCU'
  VehicleModelCU:
    type: object
    properties:
      id:
        type: integer
        format: int64
      modelName:
        type: string
      brand:
        type: string
      averageFuelConsumption:
        type: integer
      tankCapacity:
        type: integer
      weight:
        type: integer
      maxVelocity:
        type: integer
  VehicleModel:
    type: object
    allOf:
    - properties:
        id:
          type: integer
          format: int64
    - $ref: '#/definitions/VehicleModelCU'
  VehicleInfo:
    type: object
    properties:
      vin:
        type: string
      mileage:
        type: integer
        format: int64
      vKmNextMaintenance:
        type: integer
        format: int64
      tank:
          $ref: '#/definitions/Tank'
      tire:
          $ref: '#/definitions/Tire'
      status:
        type: string
        description: The vehicle status to retrieve
        default: stopped
        enum:
          - on_trip
          - on_rest
          - at_arrival
          - tire_down
          - fuel_down
          - repair_down_state
          - stopped
  VehicleCU:
    type: object
    properties:
      model:
          $ref: '#/definitions/VehicleModel'
      vehicleInfo:
          $ref: '#/definitions/VehicleInfo'
    required:
    - model
    - vehicleInfo
  Vehicle:
    type: object
    properties:
      vehicleId:
          type: integer
          format: int64
      model:
          $ref: '#/definitions/VehicleModel'
      vehicleInfo:
          $ref: '#/definitions/VehicleInfo'
    required:
    - model
    - vehicleInfo
  Trip:
    type: object
    properties:
      tripId:
          type: integer
          format: int64
      vehicleId:
          type: integer
          format: int64
      departure:
          type: string
          example: Lille
      arrival:
          type: string
          example: Paris
      distance:
          type: number
          example: 225,5
      trafficTime:
          type: number
          example: 10260
          description: 2:51:00 in second
      departureDate:
        type: string
        format: date
        description: the start date of the trip
        example: "2017-12-30"
      arrivalDate:
        type: string
        format: date
        description: the end date of the trip
        example: "2017-12-30"
      traveledTime:
          type: number
          example: 5400
          description: 1:30:00 in second
      traveledDistance:
          type: number
          example: 175,5

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
schemes:
 - https
# Added by API Auto Mocking Plugin
basePath: /SmartCar/1.0.0